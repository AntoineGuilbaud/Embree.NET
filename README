                                   Embree.NET                                   
                                   ==========                                   

Embree.NET is the unofficial C# wrapper for the Embree collection of ray tracing
kernels, and runs under the .NET and Mono runtimes in both 32- and 64-bit modes.

 ===== Introduction ===========================================================

Embree.NET implements the concept of scenes, geometries, meshes and instances in
an OOP fashion, building on top of Embree's interface and adding various runtime
and type checks to make the library as easy and fun to use as possible from C#.

Embree.NET provides the back-end to a renderer, by providing an abstraction of a
scene, composed of one or more instances of "geometries" (which are themselves a
collection of meshes). We suggest using composition to "wrap" geometry instances
over your own "model" or "object" type which can then provide functionality such
as per-mesh materials, textures, and so on - because the wrapper is designed for
this kind of interop, you are able (after some minor work) to seamlessly use any
classes you may have already written with Embree.NET, fluently and elegantly.

A sample renderer is provided with the wrapper, and shows the main ideas used by
the API and how to use the wrapper in your code. It does not demonstrate all the
features of the wrapper, however, and must primarily be used to "get a feel" for
the wrapper and how it works. Note the sample may change considerably over time.

Please decompress the sample models in Sample/Models before building the sample,
and check out the ref.png image to see the output produced by the sample itself.

 ===== Changelog ==============================================================

- July 5 2014

  * improved performance by a large factor, by passing the ray type as a generic
    type and exposing both the raw "ray packet" structure, along with a friendly
    ray-geometry intersection structure that can be used directly

- May 19 2014

  * fixed a bug in the sample that prevented it running on other cultures
    (thanks to @davepermen for this bugfix!)

- March 3 2014

  * new benchmark project which tests the performance of the various ray tracing
    methods (the geometry modification benchmarks are a work in progress)

- March 2 2014

  * initial release

 ===== Features (as of Embree 2.2) ============================================

  [x] Geometry instancing
      - supported natively and actually part of how the wrapper is designed;
      - for consistency, the wrapper does not support non-instanced geometry
        (i.e. the topmost scene contains only instanced geometry), where the
        Embree library does - we do not expect this to be a problem;

  [x] Linear motion blur (t = [0, 1])
      - supported, and the wrapper allows per-ray time values;

  [x] Packet ray tracing (1, 4, 8, 16 rays)
      - fully supported by the wrapper, however because Embree does not warn
        about unsupported CPU's (for instance, using 16-ray packet mode when
        you do not have a Xeon processor) we cannot reliably check for error
        conditions such as these, and expect this to be fixed eventually;

  [ ] Buffer sharing
      - not supported at this time;

  [ ] User-defined geometry
      - not supported at this time;

  [ ] Filter functions
      - not supported at this time;

As usual, any and all contributions are welcome!

 ===== Legal ==================================================================

The Embree library can be found at http://embree.github.io/. This product is not
affiliated with or endorsed by Intel(R) Corporation. Refer to the LICENSE file.

====== Build and Package Nuget Instructions ===================================

Download 32 and 64 bit versions of Embree 2.15
https://github.com/embree/embree/releases/download/v2.15.0/embree-2.15.0.win32.windows.zip
https://github.com/embree/embree/releases/download/v2.15.0/embree-2.15.0.x64.windows.zip

Extract to project root

+ parent folder
|- Benchmark
|- Libray
|- Sample
|- embree-2.15.0.win32
|- embree-2.15.0.x64

Update version number in Library\Library.nuspec if desired

cd to project directory and run build.bat

Upload Library\Embree.NET.*.nupkg to nuget.org